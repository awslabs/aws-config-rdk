#!/usr/bin/env bash

###############################################################################
# commit-msg HOOK
###############################################################################

#
# Based on:
# https://github.com/git/git/blob/master/templates/hooks--commit-msg.sample
#

# Bash Options
set -eu
set -o pipefail

# Read Arguments
declare commit_msg_file="${1}"

# Do we have pipenv?
command -v "pipenv" > /dev/null 2>&1 \
  || exit 0

# Lint message
if ! pipenv run -- gitlint --staged --msg-filename "${commit_msg_file}"; then
  cat << 'EO_BAD_COMMIT_MSG'

The commit message provided is not compliant with Conventional Commits.

For more information on writing commit messages, please review:
https://www.conventionalcommits.org/

To bypass this verification intentionally, you can use the `--no-verify`
option. For e.g., `git commit --no-verify -m "some commit message"`
EO_BAD_COMMIT_MSG
  exit 1
fi

# Done
exit 0

###############################################################################
